{
	"info": {
		"_postman_id": "0899a31d-3cb7-405d-9d35-c1c6208c4a8c",
		"name": "Restful-Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41463947"
	},
	"item": [
		{
			"name": "Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							"var statusCode = pm.response.code\r",
							"if (statusCode== 200){\r",
							"    pm.test(\"request successfull\")\r",
							"}\r",
							"else if(statusCode = 404) {\r",
							"pm.test()\r",
							"}\r",
							"else {\r",
							"    pm.test(\" Something went wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" var firstName = pm.variables.replaceIn('{{$randomFirstName}}')\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							" var lastName = pm.variables.replaceIn('{{$randomLastName}}')\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							" var totalPrice = pm.variables.replaceIn('{{$randomInt}}')\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"var checkIn = today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\" checkIn\",checkIn)\r",
							"var checkOut = today.add(1,'Y').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\" checkOut\",checkOut)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{ checkIn}}\",\r\n    \t\"checkout\" : \"{{ checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_Url}}/booking/",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"if (statusCode== 200)\r",
							"{\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First Name Validation\",function(){\r",
							"pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"pm.test(\"Last Name Validation\",function(){\r",
							"pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"pm.test(\"Total price  Validation\",function(){\r",
							"pm.expect(jsonData.totalprice.toString()).to.eql(pm.environment.get(\"totalPrice\"))\r",
							"})\r",
							"\r",
							"pm.test(\"  CheckIn Validation\",function(){\r",
							"pm.expect(jsonData.checkin).to.eql(pm.environment.get(\"checkIn\"))\r",
							"})\r",
							"pm.test(\"  CheckOut Validation\",function(){\r",
							"pm.expect(jsonData.checkout).to.eql(pm.environment.get(\"checkOut\"))\r",
							"})\r",
							"}\r",
							"else if(statusCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"else {\r",
							"    pm.test(\" Something went wrong\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/booking/{{id}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"token\",jsonData.token)\r",
							"var statusCode = pm.response.code\r",
							"if (statusCode== 200){\r",
							"    pm.test(\"request successfull\")\r",
							"}\r",
							"else if(statusCode = 404) {\r",
							"pm.test()\r",
							"}\r",
							"else {\r",
							"    pm.test(\" Something went wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_Url}}/auth",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							" var lastName = pm.variables.replaceIn('{{$randomLastName}}')\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							" var totalPrice = pm.variables.replaceIn('{{$randomInt}}')\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"var checkIn = today.format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\" checkIn\",checkIn)\r",
							"var checkOut = today.add(1,'Y').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\" checkOut\",checkOut)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"if (statusCode== 200){\r",
							"    pm.test(\"request successfull\")\r",
							"}\r",
							"else if(statusCode = 404) {\r",
							"pm.test()\r",
							"}\r",
							"else {\r",
							"    pm.test(\" Something went wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token = {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{ checkIn}}\",\r\n    \t\"checkout\" : \"{{ checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_Url}}/booking/{{id}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "After Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statusCode = pm.response.code\r",
							"if (statusCode== 200)\r",
							"{\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First Name Validation\",function(){\r",
							"pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"pm.test(\"Last Name Validation\",function(){\r",
							"pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"pm.test(\"Total price  Validation\",function(){\r",
							"pm.expect(jsonData.totalprice.toString()).to.eql(pm.environment.get(\"totalPrice\"))\r",
							"})\r",
							"\r",
							"pm.test(\"  CheckIn Validation\",function(){\r",
							"pm.expect(jsonData.checkin).to.eql(pm.environment.get(\"checkIn\"))\r",
							"})\r",
							"pm.test(\"  CheckOut Validation\",function(){\r",
							"pm.expect(jsonData.checkout).to.eql(pm.environment.get(\"checkOut\"))\r",
							"})\r",
							"}\r",
							"else if(statusCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"else {\r",
							"    pm.test(\" Something went wrong\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/booking/{{id}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}